#include <hidboot.h>
#include <usbhub.h>
#ifdef dobogusinclude
#include <spi4teensy3.h>
#endif
#include <Wire.h>
#include <SPI.h>
#include "U8glib.h"

char oledstrbuff[6][16];
U8GLIB_SSD1306_128X64 u8g(U8G_I2C_OPT_NONE|U8G_I2C_OPT_DEV_0);  // I2C / TWI
int mposx,mposy;
int mousepress;

void oled_drawstr(int line,char *text){
  strcpy(oledstrbuff[line],text);
  u8g.firstPage();
  do {
    u8g.setFont(u8g_font_6x10);
    u8g.setFontRefHeightExtendedText();
    u8g.setDefaultForegroundColor();
    u8g.setFontPosTop();
    for (int i=0;i<6;i++)
      u8g.drawStr(0,10*i,oledstrbuff[i]);
  } while (u8g.nextPage());
}

void oled_drawpixel(int ptx,int pty){
  u8g.firstPage();
  do {
    if (mousepress == 0)
      u8g.drawRBox(5,10,30,20,3);
    else
      u8g.drawRFrame(5,10,30,20,3);
    if (mousepress == 1)
      u8g.drawRBox(40,10,30,20,3);
    else
      u8g.drawRFrame(40,10,30,20,3);
    if (mousepress == 2)
      u8g.drawRBox(75,10,30,20,3);
    else
      u8g.drawRFrame(75,10,30,20,3);
    if (mousepress == 3)
      u8g.drawRBox(5,35,30,20,3);
    else
      u8g.drawRFrame(5,35,30,20,3);
    if (mousepress == 4)
      u8g.drawRBox(40,35,30,20,3);
    else
      u8g.drawRFrame(40,35,30,20,3);
    if (mousepress == 5)
      u8g.drawRBox(75,35,30,20,3);
    else
      u8g.drawRFrame(75,35,30,20,3);

    u8g.drawStr90(115,10, "Mouse");

    u8g.setRGB(255,255,255);
    mposx = min(125,max(0,mposx+ptx/10));
    mposy = min(57,max(0,mposy+pty/10));
    u8g.drawPixel(mposx,mposy);
    u8g.drawPixel(mposx,mposy+1);
    u8g.drawPixel(mposx,mposy+2);
    u8g.drawPixel(mposx,mposy+3);
    u8g.drawPixel(mposx,mposy+4);
    u8g.drawPixel(mposx+1,mposy+1);
    u8g.drawPixel(mposx+1,mposy+2);
    u8g.drawPixel(mposx+1,mposy+3);
    u8g.drawPixel(mposx+2,mposy+2);
    u8g.drawPixel(mposx+2,mposy+4);
    u8g.drawPixel(mposx+2,mposy+5);
  } while (u8g.nextPage());
}

class MouseRptParser : public MouseReportParser
{
protected:
    void OnMouseMove    (MOUSEINFO *mi);
    void OnLeftButtonUp (MOUSEINFO *mi);
    void OnLeftButtonDown   (MOUSEINFO *mi);
    void OnRightButtonUp    (MOUSEINFO *mi);
    void OnRightButtonDown  (MOUSEINFO *mi);
    void OnMiddleButtonUp   (MOUSEINFO *mi);
    void OnMiddleButtonDown (MOUSEINFO *mi);
};
void MouseRptParser::OnMouseMove(MOUSEINFO *mi)
{
    Serial.print("dx=");
    Serial.print(mi->dX, DEC);
    Serial.print(" dy=");
    Serial.println(mi->dY, DEC);
    oled_drawpixel(mi->dX,mi->dY);
};
void MouseRptParser::OnLeftButtonUp (MOUSEINFO *mi)
{
    Serial.println("L Butt Up");
    mousepress = -1;
    oled_drawpixel(0,0);
};
void MouseRptParser::OnLeftButtonDown   (MOUSEINFO *mi)
{
    Serial.println("L Butt Dn");
    mousepress = -1;
    if (mposy > 10 && mposy < 30){
      if (mposx > 5 && mposx < 35)
        mousepress = 0;
      else if (mposx > 40 && mposx < 70)
        mousepress = 1;
      else if (mposx > 75 && mposx < 105)
        mousepress = 2;
    }
    else if (mposy > 35 && mposy < 55){
      if (mposx > 5 && mposx < 35)
        mousepress = 3;
      else if (mposx > 40 && mposx < 70)
        mousepress = 4;
      else if (mposx > 75 && mposx < 105)
        mousepress = 5;
    }
    oled_drawpixel(0,0);
};
void MouseRptParser::OnRightButtonUp    (MOUSEINFO *mi)
{
    Serial.println("R Butt Up");
};
void MouseRptParser::OnRightButtonDown  (MOUSEINFO *mi)
{
    Serial.println("R Butt Dn");
};
void MouseRptParser::OnMiddleButtonUp   (MOUSEINFO *mi)
{
    Serial.println("M Butt Up");
};
void MouseRptParser::OnMiddleButtonDown (MOUSEINFO *mi)
{
    Serial.println("M Butt Dn");
};

USB     Usb;
USBHub     Hub(&Usb);
HIDBoot<HID_PROTOCOL_MOUSE>    HidMouse(&Usb);

uint32_t next_time;

MouseRptParser                               Prs;

void setup()
{
  mposx=64;
  mposy=32;
  mousepress = -1;
  Serial.begin( 115200 );
#if !defined(__MIPSEL__)
    while (!Serial); // Wait for serial port to connect - used on Leonardo, Teensy and other boards with built-in USB CDC serial connection
#endif
    Serial.println("Start");
    oled_drawstr(0,"Ok");

    if (Usb.Init() == -1)
        Serial.println("OSC did not start.");

    delay( 200 );

    next_time = millis() + 5000;

    HidMouse.SetReportParser(0,(HIDReportParser*)&Prs);
}

void loop()
{
  Usb.Task();
}
