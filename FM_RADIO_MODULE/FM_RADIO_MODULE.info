#include <Arduino.h>
#include <Wire.h>
#include <radio.h>
#include <RDA5807M.h>
#define FIX_BAND     RADIO_BAND_FMWORLD
#define FIX_STATION  8180
#define FIX_VOLUME   4

RDA5807M radio;

int adc_key_val[5] ={100, 350, 500, 610, 900 };
int NUM_KEYS = 5;
int adc_key_in;
int key=-1;
int oldkey=-1;

void setup() {
  Serial.begin(57600);
  Serial.println("Radio...");
  delay(200);
  radio.init();
  radio.debugEnable();
  radio.setBandFrequency(FIX_BAND, FIX_STATION);
  radio.setVolume(FIX_VOLUME);
  radio.setMono(false);
  radio.setMute(false);
}
void loop() {

  char s[12];
  radio.formatFrequency(s, sizeof(s));
  Serial.print("Station:");
  Serial.println(s);

  adc_key_in = analogRead(0);
  digitalWrite(13,LOW);
  key = get_key(adc_key_in);
  if (key != oldkey)
  {
    delay(50);
    adc_key_in = analogRead(0);
    key = get_key(adc_key_in);
    if (key != oldkey) {
      oldkey = key;
      if (key >=0) {
        digitalWrite(13,HIGH);
        int v;
        switch(key)
        {
           case 0:Serial.println("S1 OK");
                  Serial.println("seek down");
                  radio.seekDown(true);
                  break;
           case 1:Serial.println("S2 OK");
                  Serial.println("seek up");
                  radio.seekUp(true);
                  break;
           case 2:Serial.println("S3 OK");
                  Serial.println("decrease volume");
                  v = radio.getVolume();
                  if (v > 0) radio.setVolume(--v);
                  break;
           case 3:Serial.println("S4 OK");
                  Serial.println("increase volume");
                  v = radio.getVolume();
                  if (v < 15) radio.setVolume(++v);
                  break;
           case 4:Serial.println("S5 OK");
                  radio.setFrequency(FIX_STATION);
                  break;
        }
      }
    }
  }

  delay(100);
}
int get_key(unsigned int input) {
    int k;
    for (k = 0; k < NUM_KEYS; k++) {
      if (input < adc_key_val[k]) {
        return k;
      }
    }
    if (k >= NUM_KEYS)k = -1;
    return k;
}
